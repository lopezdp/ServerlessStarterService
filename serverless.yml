# NOTE: Update this with the SpectrumAPI service name
# TODO: Read serverless.yml docs
# TODO: https://serverless.com/framework/docs/providers/aws/guide/intro/

# New service names create new projects in AWS once deployed
service: serverless-starter-service(node.js)

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  # Stages are based on what is passed into the CLI when running
  # serverless commands. Or fallback to settings in provider section.
  stage: ${opt:stage, self:provider.stage}
  
  # Load webpack config
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

  # Load secret environment variables based on the current stage
  # Fallback to default if it is not in PROD
  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1

  # Environment variables made available through process.env
  environment: 
    #### EXAMPLES
    # tableName: ${self:custom.tableName}
    # stripePrivateKey: ${self:custom.environment.stripePrivateKey}

functions:
  # Defines an HTTP API endpoint that calls the microServerless function in handler.js
  # - path: url path is /microServerless
  # - method: GET request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  createTreatmentLog:
    handler: handler.microServerless
    events:
      - http:
          path: microServerless
          method: get
          cors: true





